<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="tip_error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="tip_Format" xml:space="preserve">
    <value>Format Incorrect</value>
  </data>
  <data name="tip_Require" xml:space="preserve">
    <value>This field is required</value>
  </data>
  <data name="txt_傳送" xml:space="preserve">
    <value>Submit</value>
  </data>
  <data name="txt_資料提供" xml:space="preserve">
    <value>Provide your information</value>
  </data>
  <data name="txt_完善資料" xml:space="preserve">
    <value>Please fill in your information</value>
  </data>
  <data name="txt_完善資料說明" xml:space="preserve">
    <value>Please fill out the information, in order to communicate and contact.</value>
  </data>
  <data name="txt_公司" xml:space="preserve">
    <value>Company Name</value>
  </data>
  <data name="txt_名" xml:space="preserve">
    <value>Lastname</value>
  </data>
  <data name="txt_國家" xml:space="preserve">
    <value>Country</value>
  </data>
  <data name="txt_地址" xml:space="preserve">
    <value>Address</value>
  </data>
  <data name="txt_姓" xml:space="preserve">
    <value>Firstname</value>
  </data>
  <data name="txt_性別" xml:space="preserve">
    <value>Gender</value>
  </data>
  <data name="txt_手機" xml:space="preserve">
    <value>Mobile</value>
  </data>
  <data name="txt_生日" xml:space="preserve">
    <value>Birthday</value>
  </data>
  <data name="txt_電話" xml:space="preserve">
    <value>Tel</value>
  </data>
  <data name="txt_加入經銷商" xml:space="preserve">
    <value>The benefit to be distributor of Pro'skit</value>
  </data>
  <data name="txt_加入經銷商說明" xml:space="preserve">
    <value>&lt;ul&gt;&lt;li&gt; Through the platform of customer information, to extract the customized data and technical specification. Prokit's always caring the information requiremnt of partnership&lt;/li&gt;&lt;li&gt; to offer multilayer training program, to help you benefited.&lt;/li&gt;&lt;li&gt;All distributors could obtain the best term with contracted prices to avoid misunderstanding, to enhance the relationship with your customers. &lt;/li&gt;&lt;li&gt; You are able to have the new product lanching from first timing and all data.&lt;/li&gt;&lt;/ul&gt;</value>
  </data>
  <data name="txt_確認公司名說明" xml:space="preserve">
    <value>Please re-confirm the company name for future processing by local distributor</value>
  </data>
  <data name="txt_確認公司名表頭" xml:space="preserve">
    <value>Please re-confirm the company name</value>
  </data>
  <data name="txt_我已經是經銷商" xml:space="preserve">
    <value>I am distributor</value>
  </data>
  <data name="txt_我想成為經銷商" xml:space="preserve">
    <value>I want to be distributor</value>
  </data>
  <data name="txt_qq" xml:space="preserve">
    <value>QQ</value>
  </data>
  <data name="txt_wechat" xml:space="preserve">
    <value>WeChat</value>
  </data>
</root>