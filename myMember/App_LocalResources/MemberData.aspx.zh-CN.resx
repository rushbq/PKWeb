<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="tip_error" xml:space="preserve">
    <value>输入不正确</value>
  </data>
  <data name="tip_Format" xml:space="preserve">
    <value>输入格式不正确</value>
  </data>
  <data name="tip_Require" xml:space="preserve">
    <value>此为必填栏位</value>
  </data>
  <data name="txt_傳送" xml:space="preserve">
    <value>确认送出</value>
  </data>
  <data name="txt_完善資料" xml:space="preserve">
    <value>请填写您的基本资料</value>
  </data>
  <data name="txt_完善資料說明" xml:space="preserve">
    <value>请将基本资料填写完整，以便沟通及联络</value>
  </data>
  <data name="txt_資料提供" xml:space="preserve">
    <value>編輯會員資料</value>
  </data>
  <data name="txt_公司" xml:space="preserve">
    <value>公司名称</value>
  </data>
  <data name="txt_名" xml:space="preserve">
    <value>名</value>
  </data>
  <data name="txt_國家" xml:space="preserve">
    <value>国家</value>
  </data>
  <data name="txt_地址" xml:space="preserve">
    <value>地址</value>
  </data>
  <data name="txt_姓" xml:space="preserve">
    <value>姓</value>
  </data>
  <data name="txt_性別" xml:space="preserve">
    <value>性别</value>
  </data>
  <data name="txt_手機" xml:space="preserve">
    <value>手机</value>
  </data>
  <data name="txt_生日" xml:space="preserve">
    <value>生日</value>
  </data>
  <data name="txt_電話" xml:space="preserve">
    <value>电话</value>
  </data>
  <data name="txt_加入經銷商" xml:space="preserve">
    <value>成为经销商的好处</value>
  </data>
  <data name="txt_加入經銷商說明" xml:space="preserve">
    <value>&lt;ul&gt;&lt;li&gt;透过我们的客户资讯平台，存取专属的资讯与技术文件。宝工永远关心伙伴的资讯需求&lt;/li&gt;&lt;li&gt;为伙伴提供多种层级的专属训练计画，我们的目标就是让您获益。 &lt;/li&gt;&lt;li&gt;伙伴能以最优惠的条件获得宝工产品，使用合约价格可避免发生意外状况，强化您在客户心中的地位&lt;/li&gt;&lt;li&gt;伙伴可在第一时间获知产品发布与沟通资讯。 &lt;/li&gt;&lt;/ul&gt;</value>
  </data>
  <data name="txt_確認公司名說明" xml:space="preserve">
    <value>请确认公司名称，以利经销商资料作业处理。</value>
  </data>
  <data name="txt_確認公司名表頭" xml:space="preserve">
    <value>确认公司名称</value>
  </data>
  <data name="txt_我已經是經銷商" xml:space="preserve">
    <value>我已经是经销商</value>
  </data>
  <data name="txt_我想成為經銷商" xml:space="preserve">
    <value>我想成为经销商</value>
  </data>
  <data name="txt_qq" xml:space="preserve">
    <value>QQ</value>
  </data>
  <data name="txt_wechat" xml:space="preserve">
    <value>微信</value>
  </data>
</root>