<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="tip_error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="tip_Format" xml:space="preserve">
    <value>Format Incorrect</value>
  </data>
  <data name="tip_Require" xml:space="preserve">
    <value>This field is required</value>
  </data>
  <data name="tip_驗證碼" xml:space="preserve">
    <value>Verification code</value>
  </data>
  <data name="txt_傳送" xml:space="preserve">
    <value>Submit</value>
  </data>
  <data name="txt_註冊表頭" xml:space="preserve">
    <value>Register info</value>
  </data>
  <data name="txt_註冊說明" xml:space="preserve">
    <value>&lt;div class="page-content"&gt;&lt;h4&gt;保固條款&lt;/h4&gt;&lt;ul&gt;&lt;li&gt;保固期間: 一年&lt;/li&gt;&lt;li&gt;正常使用情況下,在保固期內,予以免費保修&lt;/li&gt;&lt;li&gt;自行拆除,拆封標,使用不當等一切人為的損壞,不在保固範圍內&lt;/li&gt;&lt;li&gt;產品內標示為耗材配品則不在此保固條件內&lt;/li&gt;&lt;li&gt;如有任何問題,請洽服務中心&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;</value>
  </data>
  <data name="txt_資料提供" xml:space="preserve">
    <value>Provide your information</value>
  </data>
  <data name="txt_驗證碼" xml:space="preserve">
    <value>Verification code</value>
  </data>
  <data name="txt_名" xml:space="preserve">
    <value>Lastname</value>
  </data>
  <data name="txt_姓" xml:space="preserve">
    <value>Firstname</value>
  </data>
  <data name="txt_手機" xml:space="preserve">
    <value>Mobile</value>
  </data>
  <data name="txt_縣市" xml:space="preserve">
    <value>Region</value>
  </data>
  <data name="txt_保固日" xml:space="preserve">
    <value>保固日期</value>
  </data>
  <data name="txt_註冊日" xml:space="preserve">
    <value>註冊日期</value>
  </data>
  <data name="txt_學校" xml:space="preserve">
    <value>學校/科系</value>
  </data>
  <data name="tip_填入您的學校" xml:space="preserve">
    <value>填入您的學校</value>
  </data>
  <data name="tip_填入您的科系" xml:space="preserve">
    <value>填入您的科系</value>
  </data>
  <data name="txt_我的科系不在選單中" xml:space="preserve">
    <value>我的科系不在選單中</value>
  </data>
</root>